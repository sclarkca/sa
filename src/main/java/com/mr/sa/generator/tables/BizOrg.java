/*
 * This file is generated by jOOQ.
*/
package com.mr.sa.generator.tables;


import com.mr.sa.generator.Indexes;
import com.mr.sa.generator.Keys;
import com.mr.sa.generator.Sa;
import com.mr.sa.generator.tables.records.BizOrgRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 组织
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BizOrg extends TableImpl<BizOrgRecord> {

    private static final long serialVersionUID = 1675064054;

    /**
     * The reference instance of <code>sa.biz_org</code>
     */
    public static final BizOrg BIZ_ORG = new BizOrg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BizOrgRecord> getRecordType() {
        return BizOrgRecord.class;
    }

    /**
     * The column <code>sa.biz_org.id</code>.
     */
    public final TableField<BizOrgRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>sa.biz_org.code</code>. 编码
     */
    public final TableField<BizOrgRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "编码");

    /**
     * The column <code>sa.biz_org.name</code>. 名称
     */
    public final TableField<BizOrgRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "名称");

    /**
     * The column <code>sa.biz_org.parent_id</code>. 父节点ID
     */
    public final TableField<BizOrgRecord, String> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "父节点ID");

    /**
     * The column <code>sa.biz_org.longitude</code>. 经度
     */
    public final TableField<BizOrgRecord, String> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.VARCHAR(255), this, "经度");

    /**
     * The column <code>sa.biz_org.latitude</code>. 纬度
     */
    public final TableField<BizOrgRecord, String> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.VARCHAR(255), this, "纬度");

    /**
     * The column <code>sa.biz_org.address</code>. 地址
     */
    public final TableField<BizOrgRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "地址");

    /**
     * The column <code>sa.biz_org.created_date</code>. 创建时间
     */
    public final TableField<BizOrgRecord, LocalDateTime> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "创建时间");

    /**
     * The column <code>sa.biz_org.update_date</code>. 更新时间
     */
    public final TableField<BizOrgRecord, LocalDateTime> UPDATE_DATE = createField("update_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "更新时间");

    /**
     * The column <code>sa.biz_org.creator</code>. 创建人
     */
    public final TableField<BizOrgRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.VARCHAR(32), this, "创建人");

    /**
     * The column <code>sa.biz_org.modifier</code>. 修改人
     */
    public final TableField<BizOrgRecord, String> MODIFIER = createField("modifier", org.jooq.impl.SQLDataType.VARCHAR(32), this, "修改人");

    /**
     * The column <code>sa.biz_org.telephone</code>. 联系电话
     */
    public final TableField<BizOrgRecord, String> TELEPHONE = createField("telephone", org.jooq.impl.SQLDataType.VARCHAR(32), this, "联系电话");

    /**
     * Create a <code>sa.biz_org</code> table reference
     */
    public BizOrg() {
        this(DSL.name("biz_org"), null);
    }

    /**
     * Create an aliased <code>sa.biz_org</code> table reference
     */
    public BizOrg(String alias) {
        this(DSL.name(alias), BIZ_ORG);
    }

    /**
     * Create an aliased <code>sa.biz_org</code> table reference
     */
    public BizOrg(Name alias) {
        this(alias, BIZ_ORG);
    }

    private BizOrg(Name alias, Table<BizOrgRecord> aliased) {
        this(alias, aliased, null);
    }

    private BizOrg(Name alias, Table<BizOrgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "组织");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sa.SA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BIZ_ORG_CODE, Indexes.BIZ_ORG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BizOrgRecord> getPrimaryKey() {
        return Keys.KEY_BIZ_ORG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BizOrgRecord>> getKeys() {
        return Arrays.<UniqueKey<BizOrgRecord>>asList(Keys.KEY_BIZ_ORG_PRIMARY, Keys.KEY_BIZ_ORG_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BizOrg as(String alias) {
        return new BizOrg(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BizOrg as(Name alias) {
        return new BizOrg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BizOrg rename(String name) {
        return new BizOrg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BizOrg rename(Name name) {
        return new BizOrg(name, null);
    }
}
